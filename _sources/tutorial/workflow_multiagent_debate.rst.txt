
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "tutorial/workflow_multiagent_debate.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_tutorial_workflow_multiagent_debate.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_tutorial_workflow_multiagent_debate.py:


.. _multiagent-debate:

Multi-Agent Debate
========================

Debate workflow simulates a multi-turn discussion between different agents, mostly several solvers and an aggregator.
Typically, the solvers generate and exchange their answers, while the aggregator collects and summarizes the answers.

We implement the examples in `EMNLP 2024`_, where two debater agents will discuss a topic in a fixed order, and express their
arguments based on the previous debate history.
At each round a moderator agent will decide whether the correct answer can be obtained in the current iteration.

.. GENERATED FROM PYTHON SOURCE LINES 15-131

.. code-block:: Python

    import asyncio
    import os

    from pydantic import Field, BaseModel

    from agentscope.agent import ReActAgent
    from agentscope.formatter import (
        DashScopeMultiAgentFormatter,
        DashScopeChatFormatter,
    )
    from agentscope.message import Msg
    from agentscope.model import DashScopeChatModel
    from agentscope.pipeline import MsgHub

    # Prepare a topic
    topic = (
        "The two circles are externally tangent and there is no relative sliding. "
        "The radius of circle A is 1/3 the radius of circle B. Circle A rolls "
        "around circle B one trip back to its starting point. How many times will "
        "circle A revolve in total?"
    )


    # Create two debater agents, Alice and Bob, who will discuss the topic.
    def create_solver_agent(name: str) -> ReActAgent:
        """Get a solver agent."""
        return ReActAgent(
            name=name,
            sys_prompt=f"You're a debater named {name}. Hello and welcome to the "
            "debate competition. It's unnecessary to fully agree with "
            "each other's perspectives, as our objective is to find "
            "the correct answer. The debate topic is stated as "
            f"follows: {topic}.",
            model=DashScopeChatModel(
                model_name="qwen-max",
                api_key=os.environ["DASHSCOPE_API_KEY"],
                stream=False,
            ),
            formatter=DashScopeMultiAgentFormatter(),
        )


    alice, bob = [create_solver_agent(name) for name in ["Alice", "Bob"]]

    # Create a moderator agent
    moderator = ReActAgent(
        name="Aggregator",
        sys_prompt=f"""You're a moderator. There will be two debaters involved in a debate competition. They will present their answer and discuss their perspectives on the topic:
    ``````
    {topic}
    ``````
    At the end of each round, you will evaluate both sides' answers and decide which one is correct.""",
        model=DashScopeChatModel(
            model_name="qwen-max",
            api_key=os.environ["DASHSCOPE_API_KEY"],
            stream=False,
        ),
        # Use multiagent formatter because the moderator will receive messages from more than a user and an assistant
        formatter=DashScopeMultiAgentFormatter(),
    )


    # A structured output model for the moderator
    class JudgeModel(BaseModel):
        """The structured output model for the moderator."""

        finished: bool = Field(
            description="Whether the debate is finished.",
        )
        correct_answer: str | None = Field(
            description="The correct answer to the debate topic, only if the debate is finished. Otherwise, leave it as None.",
            default=None,
        )


    async def run_multiagent_debate() -> None:
        """Run the multi-agent debate workflow."""
        while True:
            # The reply messages in MsgHub from the participants will be broadcasted to all participants.
            async with MsgHub(participants=[alice, bob, moderator]):
                await alice(
                    Msg(
                        "user",
                        "You are affirmative side, Please express your viewpoints.",
                        "user",
                    ),
                )
                await bob(
                    Msg(
                        "user",
                        "You are negative side. You disagree with the affirmative side. Provide your reason and answer.",
                        "user",
                    ),
                )

            # Alice and Bob doesn't need to know the moderator's message, so moderator is called outside the MsgHub.
            msg_judge = await moderator(
                Msg(
                    "user",
                    "Now you have heard the answers from the others, have the debate finished, and can you get the correct answer?",
                    "user",
                ),
                structured_model=JudgeModel,
            )

            if msg_judge.metadata.get("finished"):
                print(
                    "\nThe debate is finished, and the correct answer is: ",
                    msg_judge.metadata.get("correct_answer"),
                )
                break


    asyncio.run(run_multiagent_debate())






.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Alice: The problem at hand involves two circles, A and B, with circle A having a radius that is 1/3 the size of the radius of circle B. Circle A rolls around the outside of circle B without sliding. We are asked to determine how many times circle A will revolve in total as it completes one trip around circle B.

    To solve this, we need to understand the relationship between the circumferences of the two circles and how that affects the number of revolutions of circle A. The circumference of a circle is given by \( C = 2\pi r \), where \( r \) is the radius of the circle.

    Let's denote:
    - The radius of circle B as \( R \)
    - The radius of circle A as \( r = \frac{1}{3}R \)

    The distance that circle A travels when rolling around circle B once is equal to the circumference of the path it follows, which is the circumference of a circle with a radius of \( R + r \). This is because the center of circle A traces out a circle that has a radius equal to the sum of the radii of both circles.

    So, the distance traveled by the center of circle A is:
    \[ C_{path} = 2\pi (R + r) \]

    Since \( r = \frac{1}{3}R \), we can substitute \( r \) in the equation:
    \[ C_{path} = 2\pi \left( R + \frac{1}{3}R \right) = 2\pi \left( \frac{4}{3}R \right) = \frac{8\pi R}{3} \]

    The number of revolutions circle A makes is the distance it travels divided by its own circumference. The circumference of circle A is:
    \[ C_A = 2\pi r = 2\pi \left( \frac{1}{3}R \right) = \frac{2\pi R}{3} \]

    Hence, the number of revolutions \( N \) is:
    \[ N = \frac{C_{path}}{C_A} = \frac{\frac{8\pi R}{3}}{\frac{2\pi R}{3}} = \frac{8\pi R}{3} \cdot \frac{3}{2\pi R} = \frac{8}{2} = 4 \]

    Therefore, I assert that circle A will revolve 4 times in total as it rolls around circle B.
    Alice: In conclusion, as circle A, with a radius 1/3 that of circle B, rolls around the outside of circle B, it will revolve 4 times in total to complete one trip back to its starting point.
    Bob: I disagree with the assertion that circle A will revolve 4 times in total. To determine the number of revolutions, we need to consider the ratio of the circumferences of the two circles and the fact that there is no relative sliding between them. The circumference of a circle is given by \( C = 2\pi r \), where \( r \) is the radius. Since the radius of circle A is 1/3 the radius of circle B, the circumference of circle A is 1/3 the circumference of circle B.

    When circle A rolls around the outside of circle B, it will trace out a path equal to the circumference of the larger circle plus its own diameter (since they are externally tangent). This means that the distance circle A travels is equal to the circumference of a circle with a radius equal to the sum of the radii of circle A and B, which is \( 2\pi(r_A + r_B) \).

    Given that \( r_A = \frac{1}{3}r_B \), the total distance traveled by circle A is \( 2\pi(\frac{1}{3}r_B + r_B) = 2\pi(\frac{4}{3}r_B) \).

    The number of revolutions is the total distance traveled divided by the circumference of circle A, which is \( 2\pi r_A \). Substituting \( r_A = \frac{1}{3}r_B \), we get:

    \[      ext{Number of Revolutions} = \frac{2\pi(\frac{4}{3}r_B)}{2\pi(\frac{1}{3}r_B)} = \frac{\frac{4}{3}r_B}{\frac{1}{3}r_B} = 4 \]

    However, this calculation does not account for the additional revolution that occurs because circle A must also rotate once more to align with its starting orientation after traveling around the circumference of circle B. Therefore, the total number of revolutions is actually 4 (from the distance traveled) plus 1 (for the final alignment), giving us 5 revolutions in total.
    Aggregator: The debate is finished, and the correct answer can be determined. The number of times circle A will revolve as it rolls around circle B is 4. Here's the reasoning:

    When a smaller circle (A) rolls without slipping around the outside of a larger circle (B), the number of revolutions it makes is given by the ratio of the circumference of the path it takes to its own circumference.

    The path that circle A takes is the circumference of a circle with a radius equal to the sum of the radii of circles A and B, which is \( r_A + r_B \). Given that \( r_A = \frac{1}{3}r_B \), the total path length is \( 2\pi(r_A + r_B) = 2\pi(\frac{1}{3}r_B + r_B) = 2\pi(\frac{4}{3}r_B) \).

    The circumference of circle A is \( 2\pi r_A = 2\pi(\frac{1}{3}r_B) \).

    The number of revolutions is the total path length divided by the circumference of circle A:
    \[      ext{Number of Revolutions} = \frac{2\pi(\frac{4}{3}r_B)}{2\pi(\frac{1}{3}r_B)} = \frac{\frac{4}{3}r_B}{\frac{1}{3}r_B} = 4 \]

    Therefore, circle A will make exactly 4 revolutions as it rolls around circle B, and it does not need an additional revolution for alignment since the rolling condition already accounts for the necessary rotation to maintain the no-slip condition.

    The debate is finished, and the correct answer is:  4




.. GENERATED FROM PYTHON SOURCE LINES 132-140

Further Reading
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

- :ref:`pipeline`

.. _EMNLP 2024:
Encouraging Divergent Thinking in Large Language Models through Multi-Agent Debate. EMNLP 2024.



.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 55.865 seconds)


.. _sphx_glr_download_tutorial_workflow_multiagent_debate.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: workflow_multiagent_debate.ipynb <workflow_multiagent_debate.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: workflow_multiagent_debate.py <workflow_multiagent_debate.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: workflow_multiagent_debate.zip <workflow_multiagent_debate.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
